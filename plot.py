#!/bin/env python3

import matplotlib.pyplot as plt

model_names = ['resnet18', 'mobilenet_v3_small', 'densenet121', 'custom']

train_losses = {"resnet18": [1.3791229537421117, 1.24237771308239, 1.0812275349397005, 0.9345171404429605, 0.7216801933082857, 0.5760092862451961, 0.4987347139716103, 0.36847329109877547, 0.2938431534750208, 0.25427476671883936], "mobilenet_v3_small": [1.3639550617856666, 1.127993616813133, 0.9956814412210062, 0.8607831999034434, 0.7429202707491338, 0.6549949403697087, 0.5686829077320283, 0.5018198779945187, 0.4368683548614723, 0.3879786986093921], "densenet121": [1.3412034496263068, 1.224103622379319, 1.0711323482436257, 0.9922921724968746, 0.9181170639137701, 0.7390737598744125, 0.6312594184848526, 0.5206017618721488, 0.47868726928394234, 0.4126260025580317], "custom": [1.3866623640060425, 1.2242882251739502, 1.0766593217849731, 0.9566929340362549, 0.7969467043876648, 0.6679645776748657, 0.5687010884284973, 0.4903707206249237, 0.41395971179008484, 0.35260558128356934]}
train_accuracies = {"resnet18": [0.40689233590586077, 0.48422098265454266, 0.561243982578131, 0.637655688851532, 0.7278979139604187, 0.7910903950485214, 0.8205853136700543, 0.8683426300909299, 0.8978375487124628, 0.9105983036601207], "mobilenet_v3_small": [0.41216474363872546, 0.5287690074119356, 0.593642546038053, 0.6613433177962864, 0.7147551004813938, 0.7499808970734316, 0.7855887521968365, 0.8111866737984259, 0.838618476350577, 0.8587911668067548], "densenet121": [0.4278291434247727, 0.4868189806678383, 0.5680446244364636, 0.6051807136853365, 0.6415526858714755, 0.7159012760754948, 0.7635057690838236, 0.8075953236035761, 0.8237946053335371, 0.84969817376022], "custom": [0.39944988489151, 0.48502445220947266, 0.5678483843803406, 0.6191167235374451, 0.6984260678291321, 0.7555776238441467, 0.798823356628418, 0.8293092846870422, 0.8578850626945496, 0.8846271634101868]}

val_losses = {"resnet18": [1.3438245781323381, 1.2095878538102594, 1.141898609827493, 0.9463726803728643, 0.8935929949229, 0.7420621504310433, 0.6798789915783715, 0.738940187210345, 0.7423033583801212, 0.6649002681251701], "mobilenet_v3_small": [1.2623838854746054, 1.0652375662417812, 0.999084127513507, 0.8818528199013863, 0.7925077467474319, 0.831427083488639, 0.7460945795510562, 0.8136229145981884, 0.669745958015209, 0.6718586948627734], "densenet121": [4.580957968762813, 1.161099427638163, 1.1594225604661548, 1.252970929145813, 0.906717849105369, 0.7589225863318407, 0.6944131017459257, 0.659529367184821, 0.6882916453048473, 0.6151053157471519], "custom": [1.1557841300964355, 0.968687117099762, 0.88237065076828, 0.5866213440895081, 0.4949191212654114, 0.5052487254142761, 0.4909820258617401, 0.5313999056816101, 0.40344858169555664, 0.5106192231178284]}
val_accuracies = {"resnet18": [0.4161832061068702, 0.4961832061068702, 0.5187786259541984, 0.6280916030534351, 0.6638167938931298, 0.7196946564885496, 0.7612213740458015, 0.7474809160305343, 0.7551145038167939, 0.7835114503816794], "mobilenet_v3_small": [0.46595419847328245, 0.5596946564885497, 0.5972519083969465, 0.6442748091603053, 0.696793893129771, 0.6998473282442748, 0.72, 0.736793893129771, 0.7654961832061069, 0.7822900763358779], "densenet121": [0.39114503816793894, 0.5196946564885496, 0.5487022900763359, 0.5236641221374045, 0.6341984732824427, 0.7074809160305343, 0.7346564885496183, 0.7554198473282443, 0.7596946564885496, 0.7868702290076336], "custom": [0.4375, 0.59375, 0.71875, 0.78125, 0.78125, 0.78125, 0.75, 0.6875, 0.8125, 0.8125]}

# model_names = ['resnet18', 'mobilenet_v3_small', 'densenet121']

# train_losses = {"resnet18": [1.3791229537421117, 1.24237771308239, 1.0812275349397005, 0.9345171404429605, 0.7216801933082857, 0.5760092862451961, 0.4987347139716103, 0.36847329109877547, 0.2938431534750208, 0.25427476671883936], "mobilenet_v3_small": [1.3639550617856666, 1.127993616813133, 0.9956814412210062, 0.8607831999034434, 0.7429202707491338, 0.6549949403697087, 0.5686829077320283, 0.5018198779945187, 0.4368683548614723, 0.3879786986093921], "densenet121": [1.3412034496263068, 1.224103622379319, 1.0711323482436257, 0.9922921724968746, 0.9181170639137701, 0.7390737598744125, 0.6312594184848526, 0.5206017618721488, 0.47868726928394234, 0.4126260025580317]}
# train_accuracies = {"resnet18": [0.40689233590586077, 0.48422098265454266, 0.561243982578131, 0.637655688851532, 0.7278979139604187, 0.7910903950485214, 0.8205853136700543, 0.8683426300909299, 0.8978375487124628, 0.9105983036601207], "mobilenet_v3_small": [0.41216474363872546, 0.5287690074119356, 0.593642546038053, 0.6613433177962864, 0.7147551004813938, 0.7499808970734316, 0.7855887521968365, 0.8111866737984259, 0.838618476350577, 0.8587911668067548], "densenet121": [0.4278291434247727, 0.4868189806678383, 0.5680446244364636, 0.6051807136853365, 0.6415526858714755, 0.7159012760754948, 0.7635057690838236, 0.8075953236035761, 0.8237946053335371, 0.84969817376022]}

# val_losses = {"resnet18": [1.3438245781323381, 1.2095878538102594, 1.141898609827493, 0.9463726803728643, 0.8935929949229, 0.7420621504310433, 0.6798789915783715, 0.738940187210345, 0.7423033583801212, 0.6649002681251701], "mobilenet_v3_small": [1.2623838854746054, 1.0652375662417812, 0.999084127513507, 0.8818528199013863, 0.7925077467474319, 0.831427083488639, 0.7460945795510562, 0.8136229145981884, 0.669745958015209, 0.6718586948627734], "densenet121": [4.580957968762813, 1.161099427638163, 1.1594225604661548, 1.252970929145813, 0.906717849105369, 0.7589225863318407, 0.6944131017459257, 0.659529367184821, 0.6882916453048473, 0.6151053157471519]}
# val_accuracies = {"resnet18": [0.4161832061068702, 0.4961832061068702, 0.5187786259541984, 0.6280916030534351, 0.6638167938931298, 0.7196946564885496, 0.7612213740458015, 0.7474809160305343, 0.7551145038167939, 0.7835114503816794], "mobilenet_v3_small": [0.46595419847328245, 0.5596946564885497, 0.5972519083969465, 0.6442748091603053, 0.696793893129771, 0.6998473282442748, 0.72, 0.736793893129771, 0.7654961832061069, 0.7822900763358779], "densenet121": [0.39114503816793894, 0.5196946564885496, 0.5487022900763359, 0.5236641221374045, 0.6341984732824427, 0.7074809160305343, 0.7346564885496183, 0.7554198473282443, 0.7596946564885496, 0.7868702290076336]}

# Plot the training losses
plt.figure(figsize=(12, 4))
plt.subplot(1, 2, 1)
for model_name in model_names:
    plt.plot(train_losses[model_name], label=f'{model_name} Training Loss')
plt.xlabel('Epoch')
plt.ylabel('Loss')
plt.legend()
plt.title('Training Losses')

# Plot the training accuracies
plt.subplot(1, 2, 2)
for model_name in model_names:
    plt.plot(train_accuracies[model_name], label=f'{model_name} Training Accuracy')
plt.xlabel('Epoch')
plt.ylabel('Metrics')
plt.legend()
plt.title('Training Accuracies')

plt.show()

# Plot the validation losses
plt.figure(figsize=(12, 4))
plt.subplot(1, 2, 1)
for model_name in model_names:
    plt.plot(val_losses[model_name], label=f'{model_name} Validation Loss')
plt.xlabel('Epoch')
plt.ylabel('Loss')
plt.legend()
plt.title('Validation Losses')

# Plot the validation accuracies
plt.subplot(1, 2, 2)
for model_name in model_names:
    plt.plot(val_accuracies[model_name], label=f'{model_name} Validation Accuracy')
plt.xlabel('Epoch')
plt.ylabel('Metrics')
plt.legend()
plt.title('Validation Accuracies')

plt.show()
